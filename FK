class Item:

  def __init__(self, profit, weight):
    self.profit = profit
    self.weight = weight
  
def fractionalKnapsack(W,arr):
    #sorting array on basis of ratio
    arr.sort(key = lambda x:(x.profit/x.weight), reverse = True)
    totalProfit = 0.0   #final result

    for item in arr:
      #if adding item won't overrflow, add it completely
      if item.weight <= W:
        W = W - item.weight
        totalProfit = totalProfit + item.profit
      else:
        totalProfit = totalProfit + item.profit * (W / item.weight)
        break

 #driver code
if __name__ == "__main__":
  W = 50
  arr  = [Item(60,10), Item(100,2), Item(120,30), Item(300,1)]
  max_value = fractionalKnapsack(W,arr)
  print('Maximum profit we can obtain = {}'.format(max_value))   return totalProfit  
